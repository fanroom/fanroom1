---
- name: install needed packages
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - curl
    - tar
    - bzip2
    - ca-certificates
    - ssl-cert

- name: create prometheus directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: 0755
  with_items:
    - "{{ prometheus_root_dir }}"
    - "{{ prometheus_dist_dir }}"
    - "{{ prometheus_config_dir }}"
    - "{{ prometheus_config_dir }}/conf.d"
    - "{{ prometheus_rules_dir }}"
    - "{{ prometheus_file_sd_config_dir }}"
    - "{{ prometheus_db_dir }}"
    - "{{ prometheus_log_dir }}"

- name: download prometheus server binary
  get_url:
    url: "https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/{{ prometheus_release_name }}.tar.gz"
    dest: "{{ prometheus_dist_dir }}/{{ prometheus_release_name }}.tar.gz"

- name: unarchive binary tarball
  unarchive:
    copy: no
    src: "{{ prometheus_dist_dir }}/{{ prometheus_release_name }}.tar.gz"
    dest: "{{ prometheus_dist_dir }}"
    creates: "{{ prometheus_dist_dir }}/{{ prometheus_release_name }}/prometheus"
  register: prometheus_updated
  notify:
    - restart prometheus

- name: update group and owner for files
  file:
    path: "{{ prometheus_release_name }}"
    state: directory
    recurse: yes
    owner: "{{ prometheus_user}}"
    group: "{{ prometheus_group }}"

- name: create symlink to the current release
  file:
    src: "{{ prometheus_dist_dir }}/{{ prometheus_release_name }}"
    path: "{{ prometheus_root_dir }}/current"
    state: link

- name: create prometheuste config
  template:
    src: "etc/prometheus/prometheus.yml.j2"
    dest: "{{ prometheus_config_dir }}/prometheus.yml"
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: 0644
  notify:
    - restart prometheus

- name: created service environment file
  template:
    src: etc/default/prometheus.j2
    dest: /etc/default/prometheus
    owner: root
    group: root
    mode: 0644
  notify:
    - restart prometheus

- name: create systemd service unit
  template:
    src: etc/systemd/system/prometheus.service.j2
    dest: /etc/systemd/system/prometheus.service
    owner: root
    group: root
    mode: 0644
  when: ansible_service_mgr == 'systemd'
  notify:
    - service reenable
- name: ensure prometheus service is enabled
  service:
    name: prometheus
    enabled: yes

